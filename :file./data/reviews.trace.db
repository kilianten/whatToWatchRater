2019-07-30 09:06:43 jdbc[5]: exception
org.h2.jdbc.JdbcSQLException: Table "PLAY_EVOLUTIONS" not found; SQL statement:
select id, hash, apply_script, revert_script, state, last_problem from play_evolutions where state like 'applying_%' [42102-192]
2019-07-30 09:20:28 jdbc[146]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-192]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:129)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:102)
	at org.h2.Driver.connect(Driver.java:72)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:353)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:473)
	at com.zaxxer.hikari.pool.HikariPool.access$100(HikariPool.java:71)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:727)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:713)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 18 more
2019-07-30 09:20:29 jdbc[146]: exception
org.h2.jdbc.JdbcSQLException: Cannot parse "TIMESTAMP" constant "12-10-2010"; SQL statement:
INSERT INTO movie VALUES(1, 'Inception', '12-10-2010', 'rgb') -- (1, 'Inception', '12-10-2010', 'rgb') [22007-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:122)
	at org.h2.value.Value.convertTo(Value.java:967)
	at org.h2.table.Column.convert(Column.java:149)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at play.api.db.evolutions.DatabaseEvolutions.play$api$db$evolutions$DatabaseEvolutions$$execute(EvolutionsApi.scala:335)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1$$anonfun$apply$6.apply(EvolutionsApi.scala:216)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1$$anonfun$apply$6.apply(EvolutionsApi.scala:213)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1.apply(EvolutionsApi.scala:213)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1.apply(EvolutionsApi.scala:208)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at play.api.db.evolutions.DatabaseEvolutions.evolve(EvolutionsApi.scala:208)
	at play.api.db.evolutions.DefaultEvolutionsApi.evolve(EvolutionsApi.scala:98)
	at play.api.db.evolutions.EvolutionsWebCommands.handleWebCommand(ApplicationEvolutions.scala:396)
	at play.core.DefaultWebCommands$$anonfun$handleWebCommand$1.apply(WebCommands.scala:41)
	at play.core.DefaultWebCommands$$anonfun$handleWebCommand$1.apply(WebCommands.scala:41)
	at scala.collection.immutable.Stream.flatMap(Stream.scala:489)
	at play.core.DefaultWebCommands.handleWebCommand(WebCommands.scala:41)
	at play.api.http.DefaultHttpRequestHandler$$anonfun$3.apply(HttpRequestHandler.scala:180)
	at play.api.http.DefaultHttpRequestHandler$$anonfun$3.apply(HttpRequestHandler.scala:179)
	at scala.Option.flatMap(Option.scala:171)
	at play.api.http.DefaultHttpRequestHandler.handlerForRequest(HttpRequestHandler.scala:179)
	at play.core.server.Server$.getHandlerFor(Server.scala:109)
	at play.core.server.AkkaHttpServer.play$core$server$AkkaHttpServer$$handleRequest(AkkaHttpServer.scala:267)
	at play.core.server.AkkaHttpServer$$anonfun$5.apply(AkkaHttpServer.scala:149)
	at play.core.server.AkkaHttpServer$$anonfun$5.apply(AkkaHttpServer.scala:149)
	at akka.stream.impl.fusing.MapAsync$$anon$25.onPush(Ops.scala:1207)
	at akka.stream.impl.fusing.GraphInterpreter.processPush(GraphInterpreter.scala:519)
	at akka.stream.impl.fusing.GraphInterpreter.execute(GraphInterpreter.scala:411)
	at akka.stream.impl.fusing.GraphInterpreterShell.runBatch(ActorGraphInterpreter.scala:588)
	at akka.stream.impl.fusing.GraphInterpreterShell$AsyncInput.execute(ActorGraphInterpreter.scala:472)
	at akka.stream.impl.fusing.GraphInterpreterShell.processEvent(ActorGraphInterpreter.scala:563)
	at akka.stream.impl.fusing.ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent(ActorGraphInterpreter.scala:745)
	at akka.stream.impl.fusing.ActorGraphInterpreter$$anonfun$receive$1.applyOrElse(ActorGraphInterpreter.scala:760)
	at akka.actor.Actor$class.aroundReceive(Actor.scala:517)
	at akka.stream.impl.fusing.ActorGraphInterpreter.aroundReceive(ActorGraphInterpreter.scala:670)
	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:588)
	at akka.actor.ActorCell.invoke(ActorCell.scala:557)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:258)
	at akka.dispatch.Mailbox.run(Mailbox.scala:225)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:235)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: java.lang.IllegalArgumentException: 12-10-2010
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:311)
	at org.h2.value.ValueTimestamp.parseTry(ValueTimestamp.java:140)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:120)
	... 52 more
2019-07-30 09:21:41 jdbc[166]: exception
org.h2.jdbc.JdbcSQLException: Cannot parse "TIMESTAMP" constant "16/07/2010"; SQL statement:
INSERT INTO movie VALUES(1, 'Inception', '16/07/2010', 'rgb') -- (1, 'Inception', '16/07/2010', 'rgb') [22007-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:122)
	at org.h2.value.Value.convertTo(Value.java:967)
	at org.h2.table.Column.convert(Column.java:149)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at play.api.db.evolutions.DatabaseEvolutions.play$api$db$evolutions$DatabaseEvolutions$$execute(EvolutionsApi.scala:335)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1$$anonfun$apply$6.apply(EvolutionsApi.scala:216)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1$$anonfun$apply$6.apply(EvolutionsApi.scala:213)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1.apply(EvolutionsApi.scala:213)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1.apply(EvolutionsApi.scala:208)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at play.api.db.evolutions.DatabaseEvolutions.evolve(EvolutionsApi.scala:208)
	at play.api.db.evolutions.DefaultEvolutionsApi.evolve(EvolutionsApi.scala:98)
	at play.api.db.evolutions.EvolutionsWebCommands.handleWebCommand(ApplicationEvolutions.scala:396)
	at play.core.DefaultWebCommands$$anonfun$handleWebCommand$1.apply(WebCommands.scala:41)
	at play.core.DefaultWebCommands$$anonfun$handleWebCommand$1.apply(WebCommands.scala:41)
	at scala.collection.immutable.Stream.flatMap(Stream.scala:489)
	at play.core.DefaultWebCommands.handleWebCommand(WebCommands.scala:41)
	at play.api.http.DefaultHttpRequestHandler$$anonfun$3.apply(HttpRequestHandler.scala:180)
	at play.api.http.DefaultHttpRequestHandler$$anonfun$3.apply(HttpRequestHandler.scala:179)
	at scala.Option.flatMap(Option.scala:171)
	at play.api.http.DefaultHttpRequestHandler.handlerForRequest(HttpRequestHandler.scala:179)
	at play.core.server.Server$.getHandlerFor(Server.scala:109)
	at play.core.server.AkkaHttpServer.play$core$server$AkkaHttpServer$$handleRequest(AkkaHttpServer.scala:267)
	at play.core.server.AkkaHttpServer$$anonfun$5.apply(AkkaHttpServer.scala:149)
	at play.core.server.AkkaHttpServer$$anonfun$5.apply(AkkaHttpServer.scala:149)
	at akka.stream.impl.fusing.MapAsync$$anon$25.onPush(Ops.scala:1207)
	at akka.stream.impl.fusing.GraphInterpreter.processPush(GraphInterpreter.scala:519)
	at akka.stream.impl.fusing.GraphInterpreter.execute(GraphInterpreter.scala:411)
	at akka.stream.impl.fusing.GraphInterpreterShell.runBatch(ActorGraphInterpreter.scala:588)
	at akka.stream.impl.fusing.GraphInterpreterShell$AsyncInput.execute(ActorGraphInterpreter.scala:472)
	at akka.stream.impl.fusing.GraphInterpreterShell.processEvent(ActorGraphInterpreter.scala:563)
	at akka.stream.impl.fusing.ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent(ActorGraphInterpreter.scala:745)
	at akka.stream.impl.fusing.ActorGraphInterpreter$$anonfun$receive$1.applyOrElse(ActorGraphInterpreter.scala:760)
	at akka.actor.Actor$class.aroundReceive(Actor.scala:517)
	at akka.stream.impl.fusing.ActorGraphInterpreter.aroundReceive(ActorGraphInterpreter.scala:670)
	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:588)
	at akka.actor.ActorCell.invoke(ActorCell.scala:557)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:258)
	at akka.dispatch.Mailbox.run(Mailbox.scala:225)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:235)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: java.lang.IllegalArgumentException: 16/07/2010
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:305)
	at org.h2.value.ValueTimestamp.parseTry(ValueTimestamp.java:140)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:120)
	... 52 more
2019-07-30 09:22:13 jdbc[196]: exception
org.h2.jdbc.JdbcSQLException: Cannot parse "TIMESTAMP" constant "12-10-2010"; SQL statement:
INSERT INTO movie VALUES(1, 'Inception', '12-10-2010', 'rgb') -- (1, 'Inception', '12-10-2010', 'rgb') [22007-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:122)
	at org.h2.value.Value.convertTo(Value.java:967)
	at org.h2.table.Column.convert(Column.java:149)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at play.api.db.evolutions.DatabaseEvolutions.play$api$db$evolutions$DatabaseEvolutions$$execute(EvolutionsApi.scala:335)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1$$anonfun$apply$6.apply(EvolutionsApi.scala:216)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1$$anonfun$apply$6.apply(EvolutionsApi.scala:213)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1.apply(EvolutionsApi.scala:213)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1.apply(EvolutionsApi.scala:208)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at play.api.db.evolutions.DatabaseEvolutions.evolve(EvolutionsApi.scala:208)
	at play.api.db.evolutions.DefaultEvolutionsApi.evolve(EvolutionsApi.scala:98)
	at play.api.db.evolutions.EvolutionsWebCommands.handleWebCommand(ApplicationEvolutions.scala:396)
	at play.core.DefaultWebCommands$$anonfun$handleWebCommand$1.apply(WebCommands.scala:41)
	at play.core.DefaultWebCommands$$anonfun$handleWebCommand$1.apply(WebCommands.scala:41)
	at scala.collection.immutable.Stream.flatMap(Stream.scala:489)
	at play.core.DefaultWebCommands.handleWebCommand(WebCommands.scala:41)
	at play.api.http.DefaultHttpRequestHandler$$anonfun$3.apply(HttpRequestHandler.scala:180)
	at play.api.http.DefaultHttpRequestHandler$$anonfun$3.apply(HttpRequestHandler.scala:179)
	at scala.Option.flatMap(Option.scala:171)
	at play.api.http.DefaultHttpRequestHandler.handlerForRequest(HttpRequestHandler.scala:179)
	at play.core.server.Server$.getHandlerFor(Server.scala:109)
	at play.core.server.AkkaHttpServer.play$core$server$AkkaHttpServer$$handleRequest(AkkaHttpServer.scala:267)
	at play.core.server.AkkaHttpServer$$anonfun$5.apply(AkkaHttpServer.scala:149)
	at play.core.server.AkkaHttpServer$$anonfun$5.apply(AkkaHttpServer.scala:149)
	at akka.stream.impl.fusing.MapAsync$$anon$25.onPush(Ops.scala:1207)
	at akka.stream.impl.fusing.GraphInterpreter.processPush(GraphInterpreter.scala:519)
	at akka.stream.impl.fusing.GraphInterpreter.execute(GraphInterpreter.scala:411)
	at akka.stream.impl.fusing.GraphInterpreterShell.runBatch(ActorGraphInterpreter.scala:588)
	at akka.stream.impl.fusing.GraphInterpreterShell$AsyncInput.execute(ActorGraphInterpreter.scala:472)
	at akka.stream.impl.fusing.GraphInterpreterShell.processEvent(ActorGraphInterpreter.scala:563)
	at akka.stream.impl.fusing.ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent(ActorGraphInterpreter.scala:745)
	at akka.stream.impl.fusing.ActorGraphInterpreter$$anonfun$receive$1.applyOrElse(ActorGraphInterpreter.scala:760)
	at akka.actor.Actor$class.aroundReceive(Actor.scala:517)
	at akka.stream.impl.fusing.ActorGraphInterpreter.aroundReceive(ActorGraphInterpreter.scala:670)
	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:588)
	at akka.actor.ActorCell.invoke(ActorCell.scala:557)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:258)
	at akka.dispatch.Mailbox.run(Mailbox.scala:225)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:235)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: java.lang.IllegalArgumentException: 12-10-2010
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:311)
	at org.h2.value.ValueTimestamp.parseTry(ValueTimestamp.java:140)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:120)
	... 52 more
2019-07-30 09:22:45 jdbc[216]: exception
org.h2.jdbc.JdbcSQLException: Cannot parse "TIMESTAMP" constant "16/07/2010"; SQL statement:
INSERT INTO movie VALUES(1, 'Inception', '16/07/2010', 'rgb') -- (1, 'Inception', '16/07/2010', 'rgb') [22007-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:122)
	at org.h2.value.Value.convertTo(Value.java:967)
	at org.h2.table.Column.convert(Column.java:149)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at play.api.db.evolutions.DatabaseEvolutions.play$api$db$evolutions$DatabaseEvolutions$$execute(EvolutionsApi.scala:335)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1$$anonfun$apply$6.apply(EvolutionsApi.scala:216)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1$$anonfun$apply$6.apply(EvolutionsApi.scala:213)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1.apply(EvolutionsApi.scala:213)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1.apply(EvolutionsApi.scala:208)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at play.api.db.evolutions.DatabaseEvolutions.evolve(EvolutionsApi.scala:208)
	at play.api.db.evolutions.DefaultEvolutionsApi.evolve(EvolutionsApi.scala:98)
	at play.api.db.evolutions.EvolutionsWebCommands.handleWebCommand(ApplicationEvolutions.scala:396)
	at play.core.DefaultWebCommands$$anonfun$handleWebCommand$1.apply(WebCommands.scala:41)
	at play.core.DefaultWebCommands$$anonfun$handleWebCommand$1.apply(WebCommands.scala:41)
	at scala.collection.immutable.Stream.flatMap(Stream.scala:489)
	at play.core.DefaultWebCommands.handleWebCommand(WebCommands.scala:41)
	at play.api.http.DefaultHttpRequestHandler$$anonfun$3.apply(HttpRequestHandler.scala:180)
	at play.api.http.DefaultHttpRequestHandler$$anonfun$3.apply(HttpRequestHandler.scala:179)
	at scala.Option.flatMap(Option.scala:171)
	at play.api.http.DefaultHttpRequestHandler.handlerForRequest(HttpRequestHandler.scala:179)
	at play.core.server.Server$.getHandlerFor(Server.scala:109)
	at play.core.server.AkkaHttpServer.play$core$server$AkkaHttpServer$$handleRequest(AkkaHttpServer.scala:267)
	at play.core.server.AkkaHttpServer$$anonfun$5.apply(AkkaHttpServer.scala:149)
	at play.core.server.AkkaHttpServer$$anonfun$5.apply(AkkaHttpServer.scala:149)
	at akka.stream.impl.fusing.MapAsync$$anon$25.onPush(Ops.scala:1207)
	at akka.stream.impl.fusing.GraphInterpreter.processPush(GraphInterpreter.scala:519)
	at akka.stream.impl.fusing.GraphInterpreter.execute(GraphInterpreter.scala:411)
	at akka.stream.impl.fusing.GraphInterpreterShell.runBatch(ActorGraphInterpreter.scala:588)
	at akka.stream.impl.fusing.GraphInterpreterShell$AsyncInput.execute(ActorGraphInterpreter.scala:472)
	at akka.stream.impl.fusing.GraphInterpreterShell.processEvent(ActorGraphInterpreter.scala:563)
	at akka.stream.impl.fusing.ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent(ActorGraphInterpreter.scala:745)
	at akka.stream.impl.fusing.ActorGraphInterpreter$$anonfun$receive$1.applyOrElse(ActorGraphInterpreter.scala:760)
	at akka.actor.Actor$class.aroundReceive(Actor.scala:517)
	at akka.stream.impl.fusing.ActorGraphInterpreter.aroundReceive(ActorGraphInterpreter.scala:670)
	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:588)
	at akka.actor.ActorCell.invoke(ActorCell.scala:557)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:258)
	at akka.dispatch.Mailbox.run(Mailbox.scala:225)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:235)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: java.lang.IllegalArgumentException: 16/07/2010
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:305)
	at org.h2.value.ValueTimestamp.parseTry(ValueTimestamp.java:140)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:120)
	... 52 more
2019-07-30 09:23:24 jdbc[247]: exception
org.h2.jdbc.JdbcSQLException: Cannot parse "TIMESTAMP" constant "16/07/2010"; SQL statement:
INSERT INTO movie VALUES(1, 'Inception', '16/07/2010', 'rgb2') -- (1, 'Inception', '16/07/2010', 'rgb2') [22007-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:122)
	at org.h2.value.Value.convertTo(Value.java:967)
	at org.h2.table.Column.convert(Column.java:149)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at play.api.db.evolutions.DatabaseEvolutions.play$api$db$evolutions$DatabaseEvolutions$$execute(EvolutionsApi.scala:335)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1$$anonfun$apply$6.apply(EvolutionsApi.scala:216)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1$$anonfun$apply$6.apply(EvolutionsApi.scala:213)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1.apply(EvolutionsApi.scala:213)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1.apply(EvolutionsApi.scala:208)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at play.api.db.evolutions.DatabaseEvolutions.evolve(EvolutionsApi.scala:208)
	at play.api.db.evolutions.DefaultEvolutionsApi.evolve(EvolutionsApi.scala:98)
	at play.api.db.evolutions.EvolutionsWebCommands.handleWebCommand(ApplicationEvolutions.scala:396)
	at play.core.DefaultWebCommands$$anonfun$handleWebCommand$1.apply(WebCommands.scala:41)
	at play.core.DefaultWebCommands$$anonfun$handleWebCommand$1.apply(WebCommands.scala:41)
	at scala.collection.immutable.Stream.flatMap(Stream.scala:489)
	at play.core.DefaultWebCommands.handleWebCommand(WebCommands.scala:41)
	at play.api.http.DefaultHttpRequestHandler$$anonfun$3.apply(HttpRequestHandler.scala:180)
	at play.api.http.DefaultHttpRequestHandler$$anonfun$3.apply(HttpRequestHandler.scala:179)
	at scala.Option.flatMap(Option.scala:171)
	at play.api.http.DefaultHttpRequestHandler.handlerForRequest(HttpRequestHandler.scala:179)
	at play.core.server.Server$.getHandlerFor(Server.scala:109)
	at play.core.server.AkkaHttpServer.play$core$server$AkkaHttpServer$$handleRequest(AkkaHttpServer.scala:267)
	at play.core.server.AkkaHttpServer$$anonfun$5.apply(AkkaHttpServer.scala:149)
	at play.core.server.AkkaHttpServer$$anonfun$5.apply(AkkaHttpServer.scala:149)
	at akka.stream.impl.fusing.MapAsync$$anon$25.onPush(Ops.scala:1207)
	at akka.stream.impl.fusing.GraphInterpreter.processPush(GraphInterpreter.scala:519)
	at akka.stream.impl.fusing.GraphInterpreter.execute(GraphInterpreter.scala:411)
	at akka.stream.impl.fusing.GraphInterpreterShell.runBatch(ActorGraphInterpreter.scala:588)
	at akka.stream.impl.fusing.GraphInterpreterShell$AsyncInput.execute(ActorGraphInterpreter.scala:472)
	at akka.stream.impl.fusing.GraphInterpreterShell.processEvent(ActorGraphInterpreter.scala:563)
	at akka.stream.impl.fusing.ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent(ActorGraphInterpreter.scala:745)
	at akka.stream.impl.fusing.ActorGraphInterpreter$$anonfun$receive$1.applyOrElse(ActorGraphInterpreter.scala:760)
	at akka.actor.Actor$class.aroundReceive(Actor.scala:517)
	at akka.stream.impl.fusing.ActorGraphInterpreter.aroundReceive(ActorGraphInterpreter.scala:670)
	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:588)
	at akka.actor.ActorCell.invoke(ActorCell.scala:557)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:258)
	at akka.dispatch.Mailbox.run(Mailbox.scala:225)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:235)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: java.lang.IllegalArgumentException: 16/07/2010
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:305)
	at org.h2.value.ValueTimestamp.parseTry(ValueTimestamp.java:140)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:120)
	... 52 more
2019-07-30 09:24:07 jdbc[277]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-192]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:129)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:102)
	at org.h2.Driver.connect(Driver.java:72)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:353)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:473)
	at com.zaxxer.hikari.pool.HikariPool.access$100(HikariPool.java:71)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:727)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:713)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 18 more
2019-07-30 09:26:35 jdbc[327]: exception
org.h2.jdbc.JdbcSQLException: Column "NAME" not found; SQL statement:
select t0.id, t0.title, t0.release_date, t0.movie_poster from movie t0 order by name [42122-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Select.prepare(Select.java:852)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:560)
	at org.h2.engine.Session.prepareCommand(Session.java:501)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1202)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:73)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:290)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at io.ebeaninternal.server.query.CQuery.prepareResultSet(CQuery.java:363)
	at io.ebeaninternal.server.query.CQuery.prepareBindExecuteQueryWithOption(CQuery.java:325)
	at io.ebeaninternal.server.query.CQuery.prepareBindExecuteQuery(CQuery.java:320)
	at io.ebeaninternal.server.query.CQueryEngine.findMany(CQueryEngine.java:384)
	at io.ebeaninternal.server.query.DefaultOrmQueryEngine.findMany(DefaultOrmQueryEngine.java:133)
	at io.ebeaninternal.server.core.OrmQueryRequest.findList(OrmQueryRequest.java:452)
	at io.ebeaninternal.server.core.DefaultServer.findList(DefaultServer.java:1596)
	at io.ebeaninternal.server.core.DefaultServer.findList(DefaultServer.java:1574)
	at io.ebeaninternal.server.querydefn.DefaultOrmQuery.findList(DefaultOrmQuery.java:1474)
	at models.movie.Movie.findAll(Movie.java:99)
	at controllers.HomeController.moviePage(HomeController.java:16)
	at router.Routes$$anonfun$routes$1$$anonfun$applyOrElse$2$$anonfun$apply$2.apply(Routes.scala:119)
	at router.Routes$$anonfun$routes$1$$anonfun$applyOrElse$2$$anonfun$apply$2.apply(Routes.scala:119)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:135)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:134)
	at play.core.routing.HandlerInvokerFactory$JavaActionInvokerFactory$$anon$10$$anon$2$$anon$1.invocation(HandlerInvoker.scala:109)
	at play.core.j.JavaAction$$anon$1.call(JavaAction.scala:90)
	at play.mvc.Action.lambda$call$0(Action.java:84)
	at java.util.Optional.map(Optional.java:215)
	at play.mvc.Action.call(Action.java:79)
	at play.http.DefaultActionCreator$1.call(DefaultActionCreator.java:32)
	at play.core.j.JavaAction$$anonfun$9.apply(JavaAction.scala:140)
	at play.core.j.JavaAction$$anonfun$9.apply(JavaAction.scala:140)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24)
	at play.core.j.HttpExecutionContext$$anon$2.run(HttpExecutionContext.scala:67)
	at play.api.libs.streams.Execution$trampoline$.execute(Execution.scala:71)
	at play.core.j.HttpExecutionContext.execute(HttpExecutionContext.scala:59)
	at scala.concurrent.impl.Future$.apply(Future.scala:31)
	at scala.concurrent.Future$.apply(Future.scala:494)
	at play.core.j.JavaAction.apply(JavaAction.scala:140)
	at play.api.mvc.Action$$anonfun$apply$2.apply(Action.scala:97)
	at play.api.mvc.Action$$anonfun$apply$2.apply(Action.scala:90)
	at play.api.libs.streams.StrictAccumulator$$anonfun$mapFuture$2$$anonfun$1.apply(Accumulator.scala:175)
	at play.api.libs.streams.StrictAccumulator$$anonfun$mapFuture$2$$anonfun$1.apply(Accumulator.scala:175)
	at scala.util.Try$.apply(Try.scala:192)
	at play.api.libs.streams.StrictAccumulator$$anonfun$mapFuture$2.apply(Accumulator.scala:175)
	at play.api.libs.streams.StrictAccumulator$$anonfun$mapFuture$2.apply(Accumulator.scala:171)
	at scala.Function1$$anonfun$andThen$1.apply(Function1.scala:52)
	at scala.Function1$$anonfun$andThen$1.apply(Function1.scala:52)
	at play.api.libs.streams.StrictAccumulator.run(Accumulator.scala:208)
	at play.core.server.AkkaHttpServer$$anonfun$16.apply(AkkaHttpServer.scala:376)
	at play.core.server.AkkaHttpServer$$anonfun$16.apply(AkkaHttpServer.scala:374)
	at akka.http.scaladsl.util.FastFuture$.akka$http$scaladsl$util$FastFuture$$strictTransform$1(FastFuture.scala:41)
	at akka.http.scaladsl.util.FastFuture$$anonfun$transformWith$extension1$1.apply(FastFuture.scala:51)
	at akka.http.scaladsl.util.FastFuture$$anonfun$transformWith$extension1$1.apply(FastFuture.scala:50)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:36)
	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91)
	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72)
	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:40)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:44)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
2019-07-30 09:33:51 jdbc[367]: exception
org.h2.jdbc.JdbcSQLException: Cannot parse "TIMESTAMP" constant "12-10-2010"; SQL statement:
INSERT INTO movie VALUES(1, 'Inception', '12-10-2010', 'public/images/movies/moviePosters/1.jpg') -- (1, 'Inception', '12-10-2010', 'public/images/movies/moviePosters/1.jpg') [22007-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:122)
	at org.h2.value.Value.convertTo(Value.java:967)
	at org.h2.table.Column.convert(Column.java:149)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at play.api.db.evolutions.DatabaseEvolutions.play$api$db$evolutions$DatabaseEvolutions$$execute(EvolutionsApi.scala:335)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1$$anonfun$apply$6.apply(EvolutionsApi.scala:216)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1$$anonfun$apply$6.apply(EvolutionsApi.scala:213)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1.apply(EvolutionsApi.scala:213)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1.apply(EvolutionsApi.scala:208)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at play.api.db.evolutions.DatabaseEvolutions.evolve(EvolutionsApi.scala:208)
	at play.api.db.evolutions.DefaultEvolutionsApi.evolve(EvolutionsApi.scala:98)
	at play.api.db.evolutions.EvolutionsWebCommands.handleWebCommand(ApplicationEvolutions.scala:396)
	at play.core.DefaultWebCommands$$anonfun$handleWebCommand$1.apply(WebCommands.scala:41)
	at play.core.DefaultWebCommands$$anonfun$handleWebCommand$1.apply(WebCommands.scala:41)
	at scala.collection.immutable.Stream.flatMap(Stream.scala:489)
	at play.core.DefaultWebCommands.handleWebCommand(WebCommands.scala:41)
	at play.api.http.DefaultHttpRequestHandler$$anonfun$3.apply(HttpRequestHandler.scala:180)
	at play.api.http.DefaultHttpRequestHandler$$anonfun$3.apply(HttpRequestHandler.scala:179)
	at scala.Option.flatMap(Option.scala:171)
	at play.api.http.DefaultHttpRequestHandler.handlerForRequest(HttpRequestHandler.scala:179)
	at play.core.server.Server$.getHandlerFor(Server.scala:109)
	at play.core.server.AkkaHttpServer.play$core$server$AkkaHttpServer$$handleRequest(AkkaHttpServer.scala:267)
	at play.core.server.AkkaHttpServer$$anonfun$5.apply(AkkaHttpServer.scala:149)
	at play.core.server.AkkaHttpServer$$anonfun$5.apply(AkkaHttpServer.scala:149)
	at akka.stream.impl.fusing.MapAsync$$anon$25.onPush(Ops.scala:1207)
	at akka.stream.impl.fusing.GraphInterpreter.processPush(GraphInterpreter.scala:519)
	at akka.stream.impl.fusing.GraphInterpreter.execute(GraphInterpreter.scala:411)
	at akka.stream.impl.fusing.GraphInterpreterShell.runBatch(ActorGraphInterpreter.scala:588)
	at akka.stream.impl.fusing.GraphInterpreterShell$AsyncInput.execute(ActorGraphInterpreter.scala:472)
	at akka.stream.impl.fusing.GraphInterpreterShell.processEvent(ActorGraphInterpreter.scala:563)
	at akka.stream.impl.fusing.ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent(ActorGraphInterpreter.scala:745)
	at akka.stream.impl.fusing.ActorGraphInterpreter$$anonfun$receive$1.applyOrElse(ActorGraphInterpreter.scala:760)
	at akka.actor.Actor$class.aroundReceive(Actor.scala:517)
	at akka.stream.impl.fusing.ActorGraphInterpreter.aroundReceive(ActorGraphInterpreter.scala:670)
	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:588)
	at akka.actor.ActorCell.invoke(ActorCell.scala:557)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:258)
	at akka.dispatch.Mailbox.run(Mailbox.scala:225)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:235)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: java.lang.IllegalArgumentException: 12-10-2010
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:311)
	at org.h2.value.ValueTimestamp.parseTry(ValueTimestamp.java:140)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:120)
	... 52 more
2019-07-30 11:21:24 jdbc[807]: exception
org.h2.jdbc.JdbcSQLException: Column "T0.BACKGROUND_COLOUR" not found; SQL statement:
select t0.id, t0.title, t0.release_date, t0.background_colour, t0.movie_poster from movie t0 order by t0.title [42122-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Select.prepare(Select.java:852)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:560)
	at org.h2.engine.Session.prepareCommand(Session.java:501)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1202)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:73)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:290)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at io.ebeaninternal.server.query.CQuery.prepareResultSet(CQuery.java:363)
	at io.ebeaninternal.server.query.CQuery.prepareBindExecuteQueryWithOption(CQuery.java:325)
	at io.ebeaninternal.server.query.CQuery.prepareBindExecuteQuery(CQuery.java:320)
	at io.ebeaninternal.server.query.CQueryEngine.findMany(CQueryEngine.java:384)
	at io.ebeaninternal.server.query.DefaultOrmQueryEngine.findMany(DefaultOrmQueryEngine.java:133)
	at io.ebeaninternal.server.core.OrmQueryRequest.findList(OrmQueryRequest.java:452)
	at io.ebeaninternal.server.core.DefaultServer.findList(DefaultServer.java:1596)
	at io.ebeaninternal.server.core.DefaultServer.findList(DefaultServer.java:1574)
	at io.ebeaninternal.server.querydefn.DefaultOrmQuery.findList(DefaultOrmQuery.java:1474)
	at models.movie.Movie.findAll(Movie.java:109)
	at controllers.HomeController.moviePage(HomeController.java:16)
	at router.Routes$$anonfun$routes$1$$anonfun$applyOrElse$2$$anonfun$apply$2.apply(Routes.scala:138)
	at router.Routes$$anonfun$routes$1$$anonfun$applyOrElse$2$$anonfun$apply$2.apply(Routes.scala:138)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:135)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:134)
	at play.core.routing.HandlerInvokerFactory$JavaActionInvokerFactory$$anon$10$$anon$2$$anon$1.invocation(HandlerInvoker.scala:109)
	at play.core.j.JavaAction$$anon$1.call(JavaAction.scala:90)
	at play.mvc.Action.lambda$call$0(Action.java:84)
	at java.util.Optional.map(Optional.java:215)
	at play.mvc.Action.call(Action.java:79)
	at play.http.DefaultActionCreator$1.call(DefaultActionCreator.java:32)
	at play.core.j.JavaAction$$anonfun$9.apply(JavaAction.scala:140)
	at play.core.j.JavaAction$$anonfun$9.apply(JavaAction.scala:140)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24)
	at play.core.j.HttpExecutionContext$$anon$2.run(HttpExecutionContext.scala:67)
	at play.api.libs.streams.Execution$trampoline$.execute(Execution.scala:71)
	at play.core.j.HttpExecutionContext.execute(HttpExecutionContext.scala:59)
	at scala.concurrent.impl.Future$.apply(Future.scala:31)
	at scala.concurrent.Future$.apply(Future.scala:494)
	at play.core.j.JavaAction.apply(JavaAction.scala:140)
	at play.api.mvc.Action$$anonfun$apply$2.apply(Action.scala:97)
	at play.api.mvc.Action$$anonfun$apply$2.apply(Action.scala:90)
	at play.api.libs.streams.StrictAccumulator$$anonfun$mapFuture$2$$anonfun$1.apply(Accumulator.scala:175)
	at play.api.libs.streams.StrictAccumulator$$anonfun$mapFuture$2$$anonfun$1.apply(Accumulator.scala:175)
	at scala.util.Try$.apply(Try.scala:192)
	at play.api.libs.streams.StrictAccumulator$$anonfun$mapFuture$2.apply(Accumulator.scala:175)
	at play.api.libs.streams.StrictAccumulator$$anonfun$mapFuture$2.apply(Accumulator.scala:171)
	at scala.Function1$$anonfun$andThen$1.apply(Function1.scala:52)
	at scala.Function1$$anonfun$andThen$1.apply(Function1.scala:52)
	at play.api.libs.streams.StrictAccumulator.run(Accumulator.scala:208)
	at play.core.server.AkkaHttpServer$$anonfun$16.apply(AkkaHttpServer.scala:376)
	at play.core.server.AkkaHttpServer$$anonfun$16.apply(AkkaHttpServer.scala:374)
	at akka.http.scaladsl.util.FastFuture$.akka$http$scaladsl$util$FastFuture$$strictTransform$1(FastFuture.scala:41)
	at akka.http.scaladsl.util.FastFuture$$anonfun$transformWith$extension1$1.apply(FastFuture.scala:51)
	at akka.http.scaladsl.util.FastFuture$$anonfun$transformWith$extension1$1.apply(FastFuture.scala:50)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:36)
	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91)
	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72)
	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:40)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:44)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
2019-07-30 11:22:46 jdbc[817]: exception
org.h2.jdbc.JdbcSQLException: Column count does not match; SQL statement:
INSERT INTO movie VALUES(1, 'Inception', '2010-07-16', 'images/movies/moviePosters/1.jpg', 'white') [21002-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.dml.Insert.prepare(Insert.java:265)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:560)
	at org.h2.engine.Session.prepareCommand(Session.java:501)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1202)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at play.api.db.evolutions.DatabaseEvolutions.play$api$db$evolutions$DatabaseEvolutions$$execute(EvolutionsApi.scala:335)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1$$anonfun$apply$6.apply(EvolutionsApi.scala:216)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1$$anonfun$apply$6.apply(EvolutionsApi.scala:213)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1.apply(EvolutionsApi.scala:213)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1.apply(EvolutionsApi.scala:208)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at play.api.db.evolutions.DatabaseEvolutions.evolve(EvolutionsApi.scala:208)
	at play.api.db.evolutions.DefaultEvolutionsApi.evolve(EvolutionsApi.scala:98)
	at play.api.db.evolutions.EvolutionsWebCommands.handleWebCommand(ApplicationEvolutions.scala:396)
	at play.core.DefaultWebCommands$$anonfun$handleWebCommand$1.apply(WebCommands.scala:41)
	at play.core.DefaultWebCommands$$anonfun$handleWebCommand$1.apply(WebCommands.scala:41)
	at scala.collection.immutable.Stream.flatMap(Stream.scala:489)
	at play.core.DefaultWebCommands.handleWebCommand(WebCommands.scala:41)
	at play.api.http.DefaultHttpRequestHandler$$anonfun$3.apply(HttpRequestHandler.scala:180)
	at play.api.http.DefaultHttpRequestHandler$$anonfun$3.apply(HttpRequestHandler.scala:179)
	at scala.Option.flatMap(Option.scala:171)
	at play.api.http.DefaultHttpRequestHandler.handlerForRequest(HttpRequestHandler.scala:179)
	at play.core.server.Server$.getHandlerFor(Server.scala:109)
	at play.core.server.AkkaHttpServer.play$core$server$AkkaHttpServer$$handleRequest(AkkaHttpServer.scala:267)
	at play.core.server.AkkaHttpServer$$anonfun$5.apply(AkkaHttpServer.scala:149)
	at play.core.server.AkkaHttpServer$$anonfun$5.apply(AkkaHttpServer.scala:149)
	at akka.stream.impl.fusing.MapAsync$$anon$25.onPush(Ops.scala:1207)
	at akka.stream.impl.fusing.GraphInterpreter.processPush(GraphInterpreter.scala:519)
	at akka.stream.impl.fusing.GraphInterpreter.execute(GraphInterpreter.scala:411)
	at akka.stream.impl.fusing.GraphInterpreterShell.runBatch(ActorGraphInterpreter.scala:588)
	at akka.stream.impl.fusing.GraphInterpreterShell$AsyncInput.execute(ActorGraphInterpreter.scala:472)
	at akka.stream.impl.fusing.GraphInterpreterShell.processEvent(ActorGraphInterpreter.scala:563)
	at akka.stream.impl.fusing.ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent(ActorGraphInterpreter.scala:745)
	at akka.stream.impl.fusing.ActorGraphInterpreter$$anonfun$receive$1.applyOrElse(ActorGraphInterpreter.scala:760)
	at akka.actor.Actor$class.aroundReceive(Actor.scala:517)
	at akka.stream.impl.fusing.ActorGraphInterpreter.aroundReceive(ActorGraphInterpreter.scala:670)
	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:588)
	at akka.actor.ActorCell.invoke(ActorCell.scala:557)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:258)
	at akka.dispatch.Mailbox.run(Mailbox.scala:225)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:235)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
2019-07-30 11:22:56 jdbc[847]: exception
org.h2.jdbc.JdbcSQLException: Column "T0.BACKGROUND_COLOUR" not found; SQL statement:
select t0.id, t0.title, t0.release_date, t0.background_colour, t0.movie_poster from movie t0 order by t0.title [42122-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Select.prepare(Select.java:852)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:560)
	at org.h2.engine.Session.prepareCommand(Session.java:501)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1202)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:73)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:290)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at io.ebeaninternal.server.query.CQuery.prepareResultSet(CQuery.java:363)
	at io.ebeaninternal.server.query.CQuery.prepareBindExecuteQueryWithOption(CQuery.java:325)
	at io.ebeaninternal.server.query.CQuery.prepareBindExecuteQuery(CQuery.java:320)
	at io.ebeaninternal.server.query.CQueryEngine.findMany(CQueryEngine.java:384)
	at io.ebeaninternal.server.query.DefaultOrmQueryEngine.findMany(DefaultOrmQueryEngine.java:133)
	at io.ebeaninternal.server.core.OrmQueryRequest.findList(OrmQueryRequest.java:452)
	at io.ebeaninternal.server.core.DefaultServer.findList(DefaultServer.java:1596)
	at io.ebeaninternal.server.core.DefaultServer.findList(DefaultServer.java:1574)
	at io.ebeaninternal.server.querydefn.DefaultOrmQuery.findList(DefaultOrmQuery.java:1474)
	at models.movie.Movie.findAll(Movie.java:109)
	at controllers.HomeController.moviePage(HomeController.java:16)
	at router.Routes$$anonfun$routes$1$$anonfun$applyOrElse$2$$anonfun$apply$2.apply(Routes.scala:138)
	at router.Routes$$anonfun$routes$1$$anonfun$applyOrElse$2$$anonfun$apply$2.apply(Routes.scala:138)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:135)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:134)
	at play.core.routing.HandlerInvokerFactory$JavaActionInvokerFactory$$anon$10$$anon$2$$anon$1.invocation(HandlerInvoker.scala:109)
	at play.core.j.JavaAction$$anon$1.call(JavaAction.scala:90)
	at play.mvc.Action.lambda$call$0(Action.java:84)
	at java.util.Optional.map(Optional.java:215)
	at play.mvc.Action.call(Action.java:79)
	at play.http.DefaultActionCreator$1.call(DefaultActionCreator.java:32)
	at play.core.j.JavaAction$$anonfun$9.apply(JavaAction.scala:140)
	at play.core.j.JavaAction$$anonfun$9.apply(JavaAction.scala:140)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24)
	at play.core.j.HttpExecutionContext$$anon$2.run(HttpExecutionContext.scala:67)
	at play.api.libs.streams.Execution$trampoline$.execute(Execution.scala:71)
	at play.core.j.HttpExecutionContext.execute(HttpExecutionContext.scala:59)
	at scala.concurrent.impl.Future$.apply(Future.scala:31)
	at scala.concurrent.Future$.apply(Future.scala:494)
	at play.core.j.JavaAction.apply(JavaAction.scala:140)
	at play.api.mvc.Action$$anonfun$apply$2.apply(Action.scala:97)
	at play.api.mvc.Action$$anonfun$apply$2.apply(Action.scala:90)
	at play.api.libs.streams.StrictAccumulator$$anonfun$mapFuture$2$$anonfun$1.apply(Accumulator.scala:175)
	at play.api.libs.streams.StrictAccumulator$$anonfun$mapFuture$2$$anonfun$1.apply(Accumulator.scala:175)
	at scala.util.Try$.apply(Try.scala:192)
	at play.api.libs.streams.StrictAccumulator$$anonfun$mapFuture$2.apply(Accumulator.scala:175)
	at play.api.libs.streams.StrictAccumulator$$anonfun$mapFuture$2.apply(Accumulator.scala:171)
	at scala.Function1$$anonfun$andThen$1.apply(Function1.scala:52)
	at scala.Function1$$anonfun$andThen$1.apply(Function1.scala:52)
	at play.api.libs.streams.StrictAccumulator.run(Accumulator.scala:208)
	at play.core.server.AkkaHttpServer$$anonfun$16.apply(AkkaHttpServer.scala:376)
	at play.core.server.AkkaHttpServer$$anonfun$16.apply(AkkaHttpServer.scala:374)
	at akka.http.scaladsl.util.FastFuture$.akka$http$scaladsl$util$FastFuture$$strictTransform$1(FastFuture.scala:41)
	at akka.http.scaladsl.util.FastFuture$$anonfun$transformWith$extension1$1.apply(FastFuture.scala:51)
	at akka.http.scaladsl.util.FastFuture$$anonfun$transformWith$extension1$1.apply(FastFuture.scala:50)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:36)
	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91)
	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72)
	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:40)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:44)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
2019-07-30 11:23:22 jdbc[867]: exception
org.h2.jdbc.JdbcSQLException: Column "T0.BACKGROUND_COLOUR" not found; SQL statement:
select t0.id, t0.title, t0.release_date, t0.background_colour, t0.movie_poster from movie t0 order by t0.title [42122-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Select.prepare(Select.java:852)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:560)
	at org.h2.engine.Session.prepareCommand(Session.java:501)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1202)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:73)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:290)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at io.ebeaninternal.server.query.CQuery.prepareResultSet(CQuery.java:363)
	at io.ebeaninternal.server.query.CQuery.prepareBindExecuteQueryWithOption(CQuery.java:325)
	at io.ebeaninternal.server.query.CQuery.prepareBindExecuteQuery(CQuery.java:320)
	at io.ebeaninternal.server.query.CQueryEngine.findMany(CQueryEngine.java:384)
	at io.ebeaninternal.server.query.DefaultOrmQueryEngine.findMany(DefaultOrmQueryEngine.java:133)
	at io.ebeaninternal.server.core.OrmQueryRequest.findList(OrmQueryRequest.java:452)
	at io.ebeaninternal.server.core.DefaultServer.findList(DefaultServer.java:1596)
	at io.ebeaninternal.server.core.DefaultServer.findList(DefaultServer.java:1574)
	at io.ebeaninternal.server.querydefn.DefaultOrmQuery.findList(DefaultOrmQuery.java:1474)
	at models.movie.Movie.findAll(Movie.java:109)
	at controllers.HomeController.moviePage(HomeController.java:16)
	at router.Routes$$anonfun$routes$1$$anonfun$applyOrElse$2$$anonfun$apply$2.apply(Routes.scala:138)
	at router.Routes$$anonfun$routes$1$$anonfun$applyOrElse$2$$anonfun$apply$2.apply(Routes.scala:138)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:135)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:134)
	at play.core.routing.HandlerInvokerFactory$JavaActionInvokerFactory$$anon$10$$anon$2$$anon$1.invocation(HandlerInvoker.scala:109)
	at play.core.j.JavaAction$$anon$1.call(JavaAction.scala:90)
	at play.mvc.Action.lambda$call$0(Action.java:84)
	at java.util.Optional.map(Optional.java:215)
	at play.mvc.Action.call(Action.java:79)
	at play.http.DefaultActionCreator$1.call(DefaultActionCreator.java:32)
	at play.core.j.JavaAction$$anonfun$9.apply(JavaAction.scala:140)
	at play.core.j.JavaAction$$anonfun$9.apply(JavaAction.scala:140)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24)
	at play.core.j.HttpExecutionContext$$anon$2.run(HttpExecutionContext.scala:67)
	at play.api.libs.streams.Execution$trampoline$.execute(Execution.scala:71)
	at play.core.j.HttpExecutionContext.execute(HttpExecutionContext.scala:59)
	at scala.concurrent.impl.Future$.apply(Future.scala:31)
	at scala.concurrent.Future$.apply(Future.scala:494)
	at play.core.j.JavaAction.apply(JavaAction.scala:140)
	at play.api.mvc.Action$$anonfun$apply$2.apply(Action.scala:97)
	at play.api.mvc.Action$$anonfun$apply$2.apply(Action.scala:90)
	at play.api.libs.streams.StrictAccumulator$$anonfun$mapFuture$2$$anonfun$1.apply(Accumulator.scala:175)
	at play.api.libs.streams.StrictAccumulator$$anonfun$mapFuture$2$$anonfun$1.apply(Accumulator.scala:175)
	at scala.util.Try$.apply(Try.scala:192)
	at play.api.libs.streams.StrictAccumulator$$anonfun$mapFuture$2.apply(Accumulator.scala:175)
	at play.api.libs.streams.StrictAccumulator$$anonfun$mapFuture$2.apply(Accumulator.scala:171)
	at scala.Function1$$anonfun$andThen$1.apply(Function1.scala:52)
	at scala.Function1$$anonfun$andThen$1.apply(Function1.scala:52)
	at play.api.libs.streams.StrictAccumulator.run(Accumulator.scala:208)
	at play.core.server.AkkaHttpServer$$anonfun$16.apply(AkkaHttpServer.scala:376)
	at play.core.server.AkkaHttpServer$$anonfun$16.apply(AkkaHttpServer.scala:374)
	at akka.http.scaladsl.util.FastFuture$.akka$http$scaladsl$util$FastFuture$$strictTransform$1(FastFuture.scala:41)
	at akka.http.scaladsl.util.FastFuture$$anonfun$transformWith$extension1$1.apply(FastFuture.scala:51)
	at akka.http.scaladsl.util.FastFuture$$anonfun$transformWith$extension1$1.apply(FastFuture.scala:50)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:36)
	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91)
	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72)
	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:40)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:44)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
